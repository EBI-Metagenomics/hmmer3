[tool.poetry]
name = "hmmer"
version = "3.4.0.2"
description = "HMMER binaries."
authors = ["Danilo Horta <horta@ebi.ac.uk>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "hmmer" }]
exclude = [{ path = "hmmer/data/bin/*", format = "sdist" }]
include = [
  { path = "hmmer/data/bin/*", format = "wheel" },
  { path = "build_hmmer.py", format = "sdist" },
  { path = "build_hmmer.sh", format = "sdist" },
]

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.build]
script = "build_hmmer.py"
generate-setup-file = false

[tool.poetry.group.dev.dependencies]
pytest = "^8.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
alimask = 'hmmer:alimask_entry'
hmmalign = 'hmmer:hmmalign_entry'
hmmbuild = 'hmmer:hmmbuild_entry'
hmmc2 = 'hmmer:hmmc2_entry'
hmmconvert = 'hmmer:hmmconvert_entry'
hmmemit = 'hmmer:hmmemit_entry'
hmmerfm-exactmatch = 'hmmer:hmmerfm_exactmatch_entry'
hmmfetch = 'hmmer:hmmfetch_entry'
hmmlogo = 'hmmer:hmmlogo_entry'
hmmpgmd = 'hmmer:hmmpgmd_entry'
hmmpgmd_shard = 'hmmer:hmmpgmd_shard_entry'
hmmpress = 'hmmer:hmmpress_entry'
hmmscan = 'hmmer:hmmscan_entry'
hmmsearch = 'hmmer:hmmsearch_entry'
hmmsim = 'hmmer:hmmsim_entry'
hmmstat = 'hmmer:hmmstat_entry'
jackhmmer = 'hmmer:jackhmmer_entry'
makehmmerdb = 'hmmer:makehmmerdb_entry'
nhmmer = 'hmmer:nhmmer_entry'
nhmmscan = 'hmmer:nhmmscan_entry'
phmmer = 'hmmer:phmmer_entry'

[tool.cibuildwheel]
skip = ["*i686"]

[tool.cibuildwheel.linux]
archs = ["auto", "aarch64"]
